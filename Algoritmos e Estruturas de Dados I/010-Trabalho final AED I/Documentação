Sprint 1:
Definição do backlog do produto - vc
historias de usuario - vc
menu inicial - eu
menu voo - eu
casos de teste menus - vc
banco de dados BHRIO - vc
banco de dados BHSP - eu
banco de dados BHBRASILIA - eu

sprint 2-
documentação funções menu
função para carregar o dados dos bancos de dados BHRIO - eu
função para carregar o dados dos bancos de dados BHSP - vc
função para carregar o dados dos bancos de dados BHBRASILIA - eu
Mostrar lista completa dos passageiros de determinado voo - eu
buscar passageiro pelo nome - eu

Sprint 3-
refatoração das funções de carregar banco de dados - eu
buscar passageiro por CPF - vc
Mostrar lista de espera - eu
Cadastrar passageiro - eu
Excluir passageiro - eu

TESTES:
função menu inicial:
    input: 1 -> chamar função do menu voo BHRIO
    input: 2 -> chamar função do menu voo BHSP
    input: 3 -> chamar função do menu voo BHBRASILIA
    input: Int diferente de 1,2,3 -> print "voo invalido"
    input: input sem ser um inteiro -> print valor invalido
função menu de voos:
    recebendo: 1 -> mostrar menu voo BHRIO
    recebendo: 2 -> mostrar menu voo BHSP
    recebendo: 3 -> mostrar menu voo BHBRASILIA
    input: input sem ser um inteiro -> print valor invalido
    input: Int diferente de 1,2,3,4,5,6,9 -> print "opção invalida"
    input: 9 -> voltar para o menu inicial
função carregar banco de dados do voo selecionado:
    Ao escolher um voo no menu inicial a mensagem "Carregando banco de dados..." tem que refletir a escolha do voo
    Deve ser possivel acessar os dados da lista de passageiros, para testar isso um printf("%d", listaDePassageiros[0].id) tem que printar o numero "1"
função mostrar lista de passageiros:
    recebendo: 1 -> mostrar mostrar todos os passageiros cadastrados no arquivo txt do voo BHRIO
    recebendo: 2 -> mostrar mostrar todos os passageiros cadastrados no arquivo txt do voo BHSP
    recebendo: 3 -> mostrar mostrar todos os passageiros cadastrados no arquivo txt do voo BHBRASILIA
função buscar passageiro por nome:
    Abrir arquivo txt de algum voo -> escolher um nome dentro do arquivo -> Rodar o programa -> Colocar no primeiro input o numero do voo ->
        colocar no segundo input "3"-> Colocar como input o nome escolhido -> Conferir se os dados exibidos refletem os dados cadastrados
função buscar passageiro por cpf:
    Abrir arquivo txt de algum voo -> escolher um cpf dentro do arquivo -> Rodar o programa -> Colocar no primeiro input o numero do voo ->
        colocar no segundo input "2"-> Colocar como input o cpf escolhido -> Conferir se os dados exibidos refletem os dados cadastrados
Função mostrar lista de espera:
    recebendo: 1 -> Conferir a quantidade de passageiros cadastrados no voo BHRIO -> Caso tenham 10 ou menos a função deve imprimir "Esse voo esta sem lista de espera."
        Caso tenha mais de 10 a função deve mostrar os dados de cada passageiro na lista
    recebendo: 2 -> Conferir a quantidade de passageiros cadastrados no voo BHSP -> Caso tenham 10 ou menos a função deve imprimir "Esse voo esta sem lista de espera."
        Caso tenha mais de 10 a função deve mostrar os dados de cada passageiro na lista
    recebendo: 3 -> Conferir a quantidade de passageiros cadastrados no voo BHBRASILIA -> Caso tenham 10 ou menos a função deve imprimir "Esse voo esta sem lista de espera."
        Caso tenha mais de 10 a função deve mostrar os dados de cada passageiro na lista

Erros encontrados e corrigidos:
    -Quando o input numerico das funções menuInicial e menuVoos recebia um texto não numerico o programa entrava em loop infinito
        -Correção:
            foi implementada a função sscanf() para tentar converter o input do usuario de texto para numero e se falhar o loop de leitura se mantem. 
            A função passou nos testes subsequentes

    -As funções de carregar banco de dados estavam salvando incorretamente o atributo "cpf" de cada passageiro, salvando o endereço em conjunto com o cpf
        -Correção:
            O erro foi encontrado na função fscanf() de cada função de leitura dos bancos, a qual não encontrava o separador de campos no banco de dados
            A leitura da função foi corrigida e passou nos testes subsequentes.
    -Quando o voo tinha menos que 15 passageiros a função para mostrar a lista de passageiros completava a quantidade de passageiros com lixo.
        -Correção:
            Foi adicionado um contador de passageiros na função de carregar banco de dados e essa variavel foi adicionada a chamada da função de mostrar a lista.